<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on 冰与火</title>
    <link>https://hekrxe.github.io/</link>
    <description>Recent content in Introduction on 冰与火</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 17 May 2020 01:27:21 +0800</lastBuildDate>
    
	<atom:link href="https://hekrxe.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CAS</title>
      <link>https://hekrxe.github.io/docs/java/concurrent/cas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hekrxe.github.io/docs/java/concurrent/cas/</guid>
      <description>CAS(Compare And Swap) 不需要OS来执行上下文切换(系统调用)，而直接原子修改内存数据 底层汇编指令： 1 2 3 // 如果是多处理器则加上 lock 指令 // 说明 cmpxchgl 不能保证原子性 IF_MP</description>
    </item>
    
    <item>
      <title>JVM相关参数</title>
      <link>https://hekrxe.github.io/docs/jvm/parameter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hekrxe.github.io/docs/jvm/parameter/</guid>
      <description>记录一些JVM参数，以供参考 - : 标准参数 -X : 非标准参数 -XX : 参数 说明 -XX:+/-UseTLAB 给对象分配内存空间时是否优先使用线程本地分配缓冲以解决在堆上分配时的竞争</description>
    </item>
    
    <item>
      <title>Serial</title>
      <link>https://hekrxe.github.io/docs/jvm/gc/serial/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hekrxe.github.io/docs/jvm/gc/serial/</guid>
      <description>新生代单线程串行收集器，使用标记复制算法； 客户端模式下默认的新生代收集器。 对于内存受限的环境，内存占用是最小的； -XX:+UseSerialGC</description>
    </item>
    
    <item>
      <title>volatile</title>
      <link>https://hekrxe.github.io/docs/java/concurrent/volatile/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hekrxe.github.io/docs/java/concurrent/volatile/</guid>
      <description>volatile的作用 -可见性 -禁止指令重排序 如何实现可见性 写,立即写到主内存 读,每次都到主内存读，言外之意：线程不会主动去主内存读取普通变</description>
    </item>
    
    <item>
      <title>Without ToC</title>
      <link>https://hekrxe.github.io/docs/jvm/thread/without-toc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hekrxe.github.io/docs/jvm/thread/without-toc/</guid>
      <description>At me ipso nepotibus nunc celebratior genus Tanto oblite </description>
    </item>
    
    <item>
      <title>ParNew</title>
      <link>https://hekrxe.github.io/docs/jvm/gc/par_new/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hekrxe.github.io/docs/jvm/gc/par_new/</guid>
      <description>ParNew实质上是Serial的多线程并行版本，除了同时使用多条线程进行垃圾收集之外，其余的行为都与Serial完全一致。 JDK7之前服务</description>
    </item>
    
    <item>
      <title>Synchronized</title>
      <link>https://hekrxe.github.io/docs/java/concurrent/synchronized/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hekrxe.github.io/docs/java/concurrent/synchronized/</guid>
      <description>synchronized 不能保证代码块内的指令重排序。 重量级锁 JVM对于OS来说是一个普通的进程，当JVM申请锁资源时必须通过上下文切换进入内核态(系统调用)才能</description>
    </item>
    
    <item>
      <title>With ToC</title>
      <link>https://hekrxe.github.io/docs/jvm/thread/with-toc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hekrxe.github.io/docs/jvm/thread/with-toc/</guid>
      <description>Caput vino delphine in tamen vias Cognita laeva illo fracta Natus quaerere Limitibus misere sit Enim sua Germana aves pignus tecta </description>
    </item>
    
    <item>
      <title>对象堆内存分配</title>
      <link>https://hekrxe.github.io/docs/jvm/heap/allocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hekrxe.github.io/docs/jvm/heap/allocation/</guid>
      <description>对象堆内存分配 对象所需内存大小在类加载完成后便可完全确定，为对象分配空间的任务实际上便等同于把一块确定大小的内存从Java堆中划分出来。 分配</description>
    </item>
    
    <item>
      <title>Parallel Scavenge</title>
      <link>https://hekrxe.github.io/docs/jvm/gc/parallel_scavenge/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hekrxe.github.io/docs/jvm/gc/parallel_scavenge/</guid>
      <description>基于标记复制算法的并行多线程新生代收集器。 其关注点是吞吐量，吞吐量优先收集器。 自适应调节策略是ParallelScavenge的一个特点。 -XX:MaxGCPauseMillis</description>
    </item>
    
    <item>
      <title>Serial Old</title>
      <link>https://hekrxe.github.io/docs/jvm/gc/serial_old/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hekrxe.github.io/docs/jvm/gc/serial_old/</guid>
      <description>Serial Old是Serial的老年代版本， 单线程串行收集器，采用 标记-整理 算法。 两种用途： JDK5以前与ParallelScavenge配合使用 作</description>
    </item>
    
    <item>
      <title>Parallel Old</title>
      <link>https://hekrxe.github.io/docs/jvm/gc/parallel_old/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hekrxe.github.io/docs/jvm/gc/parallel_old/</guid>
      <description>Parallel Old是Parallel Scavenge的老年代版本。 支持多线程并发，基于标记整理算法。 在优先考虑吞吐量的场景可以使用 ParallelSc</description>
    </item>
    
    <item>
      <title>CMS</title>
      <link>https://hekrxe.github.io/docs/jvm/gc/cms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hekrxe.github.io/docs/jvm/gc/cms/</guid>
      <description>CMS</description>
    </item>
    
    <item>
      <title>G1</title>
      <link>https://hekrxe.github.io/docs/jvm/gc/g1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://hekrxe.github.io/docs/jvm/gc/g1/</guid>
      <description>G1是面向全堆的垃圾收集器，不再需要其他新生代收集器的配合工作。</description>
    </item>
    
    <item>
      <title>Whkl</title>
      <link>https://hekrxe.github.io/posts/whkl/</link>
      <pubDate>Sun, 17 May 2020 01:27:21 +0800</pubDate>
      
      <guid>https://hekrxe.github.io/posts/whkl/</guid>
      <description>对酒当歌的夜 四下无人的街 a stupid mistake</description>
    </item>
    
    <item>
      <title>Wangfugui</title>
      <link>https://hekrxe.github.io/posts/wangfugui/</link>
      <pubDate>Tue, 05 May 2020 17:10:51 +0800</pubDate>
      
      <guid>https://hekrxe.github.io/posts/wangfugui/</guid>
      <description>难得的一次抓拍合影， 第一次献给王富贵。</description>
    </item>
    
  </channel>
</rss>